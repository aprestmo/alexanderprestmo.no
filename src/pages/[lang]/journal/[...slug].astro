---
export const prerender = true;

import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getPostLang } from "@/i18n/getPostLang";
import { getPostSlugWithoutLang } from "@/i18n/getPostSlugWithoutLang";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const journalEntries = await getCollection<"journal">("journal");

  return journalEntries.map((post: CollectionEntry<"journal">) => {
    const lang = getPostLang(post.slug);
    const slug = getPostSlugWithoutLang(post.slug);
    return {
      params: { lang, slug },
      props: { post },
    };
  });
}) satisfies GetStaticPaths;

interface Props {
  post: CollectionEntry<"journal">;
}

const { lang } = Astro.params;
const { post } = Astro.props;
const { Content } = await post.render();

const formatDate = (date: Date) => {
  const day = String(date.getDate()).padStart(2, "0");
  const month = String(date.getMonth() + 1).padStart(2, "0");
  const year = date.getFullYear();
  return `${day}.${month}.${year}`;
};
---

<BaseLayout title={post.data.title}>
  <main class="flow">
    <a href={getRelativeLocaleUrl(lang, "journal")}>
      ‚Üê&ensp;{lang === "en" ? "Back to journal" : "Tilbake til journal"}
    </a>
    <h1>{post.data.title}</h1>
    <time datetime={post.data.date.toISOString()}>
      {formatDate(post.data.date)}
    </time>
    <Content />
  </main>
</BaseLayout>

<style is:global>
  h1 {
    line-height: 1.2;
  }

  p {
    text-align: left;
  }

  h2 {
    font-size: 1.75em;
    font-variant: normal;
    font-weight: 300;
    letter-spacing: initial;
    margin-block-start: 2.5cap;
    text-align: left;
  }

  iframe {
    display: block;
    max-inline-size: 100%;
  }
</style>
